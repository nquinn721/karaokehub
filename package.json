{
  "name": "karaokehub-server",
  "version": "1.0.0",
  "description": "KaraokeHub NestJS Backend",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "setup": "npm run setup:backend && npm run setup:frontend",
    "setup:backend": "npm install",
    "setup:frontend": "cd client && npm install",
    "setup:db": "docker-compose -f docker-compose.dev.yml up -d",
    "stop:db": "docker-compose -f docker-compose.dev.yml down",
    "reset:db": "docker-compose -f docker-compose.dev.yml down -v && docker-compose -f docker-compose.dev.yml up -d",
    "db:logs": "docker-compose -f docker-compose.dev.yml logs mysql",
    "dev": "concurrently \"npm run start:dev\" \"cd client && npm run dev\"",
    "build:all": "npm run build:frontend && npm run build",
    "build:frontend": "cd client && npm run build",
    "deploy": "gcloud run deploy karaoke-pal --source . --platform managed --region us-central1"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.2",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.2.10",
    "@nestjs/serve-static": "^4.0.0",
    "@nestjs/throttler": "^5.0.1",
    "@nestjs/typeorm": "^10.0.1",
    "@nestjs/websockets": "^10.2.10",
    "@types/moment": "^2.11.29",
    "@types/node-fetch": "^2.6.13",
    "@types/puppeteer": "^5.4.7",
    "@types/stripe": "^8.0.416",
    "addressit": "^1.8.2",
    "axios": "^1.11.0",
    "bcryptjs": "^3.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "google-auth-library": "^10.2.1",
    "helmet": "^7.1.0",
    "moment": "^2.30.1",
    "mysql2": "^3.6.5",
    "node-fetch": "^3.3.2",
    "ollama": "^0.5.17",
    "parse-address": "^1.1.2",
    "passport": "^0.7.0",
    "passport-facebook": "^3.0.0",
    "passport-github2": "^0.1.12",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "puppeteer": "^24.16.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "socket.io": "^4.7.4",
    "stripe": "^18.4.0",
    "typeorm": "^0.3.17"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/bcrypt": "^5.0.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.6",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/passport-facebook": "^3.0.3",
    "@types/passport-google-oauth20": "^2.0.14",
    "@types/passport-jwt": "^3.0.13",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
