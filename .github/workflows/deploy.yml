name: Deploy to Google Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: heroic-footing-460117-k8
  SERVICE_NAME: karaokehub
  REGION: us-east1

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install backend dependencies
        run: npm ci

      - name: Install frontend dependencies
        run: cd client && npm ci

      - name: Run backend tests
        run: npm test -- --passWithNoTests

      - name: Build frontend
        run: cd client && npm run build

      - name: Build backend
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: heroic-footing-460117-k8

      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker

      - name: Build Docker image
        run: |
          docker build \
            --tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
            --tag gcr.io/$PROJECT_ID/$SERVICE_NAME:latest \
            .

      - name: Push Docker image to Google Container Registry
        run: |
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --timeout 300 \
            --concurrency 80 \
            --add-cloudsql-instances heroic-footing-460117-k8:us-central1:accountant \
            --set-env-vars NODE_ENV=production \
            --set-env-vars FRONTEND_URL=https://karaokehub-203453576607.us-east1.run.app \
            --set-env-vars INSTANCE_CONNECTION_NAME=heroic-footing-460117-k8:us-central1:accountant \
            --update-secrets DATABASE_HOST=KARAOKE_HUB_DB_HOST:latest \
            --update-secrets DATABASE_PORT=KARAOKE_HUB_DB_PORT:latest \
            --update-secrets DATABASE_NAME=KARAOKE_HUB_DB_NAME:latest \
            --update-secrets DATABASE_SYNCHRONIZE=KARAOKE_HUB_DB_SYNCHRONIZE:latest \
            --update-secrets DATABASE_USERNAME=KARAOKE_HUB_DB_USERNAME:latest \
            --update-secrets DATABASE_PASSWORD=KARAOKE_HUB_DB_PASSWORD:latest \
            --update-secrets JWT_SECRET=KARAOKE_HUB_JWT_SECRET:latest \
            --update-secrets GOOGLE_CLIENT_ID=KARAOKE_HUB_GOOGLE_CLIENT_ID:latest \
            --update-secrets GOOGLE_CLIENT_SECRET=KARAOKE_HUB_GOOGLE_CLIENT_SECRET:latest \
            --update-secrets GEMINI_API_KEY=KARAOKE_HUB_GEMINI_API_KEY:latest

      - name: Get Cloud Run URL
        run: |
          URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
          echo "Service deployed at: $URL"
          echo "SERVICE_URL=$URL" >> $GITHUB_ENV

      - name: Update status
        run: |
          echo "âœ… Deployment successful!"
          echo "ðŸš€ Service URL: $SERVICE_URL"
